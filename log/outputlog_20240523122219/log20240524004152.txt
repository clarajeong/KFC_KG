Got argument: Genghis Khan, 1, 1_7

utils/question.py extract_hops(Genghis Khan, [], []) Start
There is no /mnt/nas2/seogyeong/23winter/kfc_dataset/wiki_files/Genghis_Khan_info.json file
extract_info(Genghis Khan) Start.
utils/preprocess.py extract_info(): Checking good links on Genghis Khan
Greater Khorasan is Geography
1 / 30 )  Khorasan Greater Khorasan khurasan
Ögedei Khan is People
2 / 30 )  Ögedei Ögedei Khan ögedei_khan
Russia is Geography
3 / 30 )  Russia Russia russia
Mongolia is Geography
4 / 30 )  Mongolia Mongolia mongolia
Kublai Khan is People
5 / 30 )  Kublai Khan Kublai Khan kublai_khan
Yuan dynasty is Geography
6 / 30 )  Yuan dynasty Yuan dynasty yuan_dynasty
Arthur Waley is People
7 / 30 )  Arthur Waley Arthur Waley arthur_waley
Pig  is Animal
8 / 30 )  Year of the Pig Pig  swine
Sable is Animal
9 / 30 )  sable Sable sable
Qojin  is People
10 / 30 )  Qojin Qojin  gengis_khan
Jochi is People
11 / 30 )  Jochi Jochi jochi
Battle of Yedi Qunan  is People
12 / 30 )  at Yedi Qunan Battle of Yedi Qunan  gengis_khan
Tibet is Geography
13 / 30 )  Tibet Tibet tibet
Altai Mountains is Geography
14 / 30 )  Altai Mountains Altai Mountains altai_mountains
Timur is People
15 / 30 )  Timur Timur timur
Hoi-yin Irgen  is People
16 / 30 )  Hoi-yin Irgen Hoi-yin Irgen  gengis_khan
Irtysh is Geography
17 / 30 )  River Irtysh Irtysh irtysh
Gobi Desert is Geography
18 / 30 )  Gobi desert Gobi Desert gobi_desert
Yellow River is Geography
19 / 30 )  Yellow River Yellow River yellow_river
Mountain pass is Geography
20 / 30 )  mountain passes Mountain pass mountain_pass
North China Plain is Geography
21 / 30 )  North China Plain North China Plain north_china_plain
Juyong Pass is Geography
22 / 30 )  Juyong Pass Juyong Pass juyongguan
Kaifeng is Geography
23 / 30 )  Kaifeng Kaifeng kaifeng
Liaodong Peninsula is Geography
24 / 30 )  Liaodong Liaodong Peninsula liaodong_peninsula
Kashgar is Geography
25 / 30 )  Kashgar Kashgar kashgar
Pamir Mountains is Geography
26 / 30 )  Pamir Mountains Pamir Mountains pamir_mountains
Iran is Geography
27 / 30 )  Persia Iran iran
Afghanistan is Geography
28 / 30 )  Afghanistan Afghanistan afghanistan
Syr Darya is Geography
29 / 30 )  Syr Darya Syr Darya syr_darya
Kyzylkum Desert is Geography
30 / 30 )  Kyzylkum Desert Kyzylkum Desert kizil_kum
extract_triplet(Genghis Khan)
Got GPT's response. String length : 3275
['Based on the provided task description, here is the triplet extraction from the text:']
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  []
object_words:  []
subject_words:  []
object_words:  []
subject_words:  []
object_words:  []
subject_words:  []
object_words:  [(None, 'Genghis Khan', 'genghis_khan')]
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  []
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [['Ögedei', 'Ögedei Khan', 'ögedei_khan']]
object_words:  [(None, 'Genghis Khan', 'genghis_khan')]
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  [['Khorasan', 'Greater Khorasan', 'khurasan']]
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  [['Mongolia', 'Mongolia', 'mongolia']]
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [['Kublai Khan', 'Kublai Khan', 'kublai_khan']]
object_words:  [['Yuan dynasty', 'Yuan dynasty', 'yuan_dynasty']]
subject_words:  [['Kublai Khan', 'Kublai Khan', 'kublai_khan']]
object_words:  [(None, 'Genghis Khan', 'genghis_khan')]
subject_words:  [['Arthur Waley', 'Arthur Waley', 'arthur_waley']]
object_words:  []
subject_words:  []
object_words:  [(None, 'Genghis Khan', 'genghis_khan')]
subject_words:  [['Arthur Waley', 'Arthur Waley', 'arthur_waley']]
object_words:  []
subject_words:  []
object_words:  []
subject_words:  [['Jochi', 'Jochi', 'jochi']]
object_words:  [(None, 'Genghis Khan', 'genghis_khan')]
subject_words:  []
object_words:  []
subject_words:  []
object_words:  []
subject_words:  []
object_words:  []
subject_words:  []
object_words:  []
subject_words:  []
object_words:  []
subject_words:  []
object_words:  []
subject_words:  []
object_words:  []
subject_words:  []
object_words:  []
subject_words:  []
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  []
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  []
object_words:  []
subject_words:  [['Jochi', 'Jochi', 'jochi']]
object_words:  []
subject_words:  []
object_words:  []
subject_words:  [['Ögedei', 'Ögedei Khan', 'ögedei_khan']]
object_words:  [(None, 'Genghis Khan', 'genghis_khan')]
subject_words:  []
object_words:  [['Altai Mountains', 'Altai Mountains', 'altai_mountains']]
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
subject_words:  [(None, 'Genghis Khan', 'genghis_khan')]
object_words:  []
['Please note that this list may not capture every possible triplet nor does it include every important keyword as I aimed to limit the extraction to a manageable amount in accordance with the task requirements. If you require triplets for each specified important keyword, let me know and I can adjust the list accordingly.']
first_hop:  {'triplet': '("Genghis Khan", "deified in", "Mongolia")', 'start word': 'Genghis Khan', 'end word': 'Mongolia', 'source': {'name': 'Genghis Khan', 'line': 18}, 'cpnet': {'start word': 'genghis_khan', 'end word': 'mongolia'}}
next_word: Mongolia

utils/question.py extract_hops(Mongolia, [], ['Genghis Khan']) Start
There is no /mnt/nas2/seogyeong/23winter/kfc_dataset/wiki_files/Mongolia_info.json file
extract_info(Mongolia) Start.
utils/preprocess.py extract_info(): Checking good links on Mongolia
Russia is Geography
1 / 30 )  Russia Russia russia
China is Geography
2 / 30 )  China China china
Gobi Desert is Geography
3 / 30 )  Gobi Desert Gobi Desert gobi_desert
Ulaanbaatar is Geography
4 / 30 )  Ulaanbaatar Ulaanbaatar ulaanbaatar
Genghis Khan is People
5 / 30 )  Genghis Khan Genghis Khan genghis_khan
Kublai Khan is People
6 / 30 )  Kublai Khan Kublai Khan kublai_khan
Yuan dynasty is Geography
7 / 30 )  Yuan dynasty Yuan dynasty yuan_dynasty
Qing dynasty is Geography
8 / 30 )  Qing dynasty Qing dynasty qing_dynasty
Soviet Union is Geography
9 / 30 )  Soviet Union Soviet Union soviet_union
World Trade Organization is Geography
10 / 30 )  World Trade Organization World Trade Organization world_trade_organization
Mammoth is Animal
11 / 30 )  mammoths Mammoth mammoth
Lynx is Animal
12 / 30 )  lynx Lynx lynx
Bactrian camel is Animal
13 / 30 )  bactrian camels Bactrian camel bactrian_camel
Ostrich is Animal
14 / 30 )  ostriches Ostrich ostrich
Lascaux is Geography
15 / 30 )  Lascaux Lascaux lascaux
Altai Mountains is Geography
16 / 30 )  the Altai Altai Mountains altai_mountains
Great Wall of China is Geography
17 / 30 )  Great Wall of China Great Wall of China great_wall_of_china
Pantikapaion is Geography
18 / 30 )  Panticapaeum Pantikapaion panticapaeum
Kerch is Geography
19 / 30 )  Kerch Kerch kerch
Manchuria is Geography
20 / 30 )  Manchuria Manchuria manchuria
Poland is Geography
21 / 30 )  Poland Poland poland
Korea is Geography
22 / 30 )  Korea Korea korea
Siberia is Geography
23 / 30 )  Siberia Siberia siberia
Gulf of Oman is Geography
24 / 30 )  Gulf of Oman Gulf of Oman gulf_of_oman
Vietnam is Geography
25 / 30 )  Vietnam Vietnam vietnam
Möngke Khan is People
26 / 30 )  Möngke Khan Möngke Khan möngke
Hohhot is Geography
27 / 30 )  Hohhot Hohhot hohhot
Inner Mongolia is Geography
28 / 30 )  Inner Mongolian Inner Mongolia inner_mongolia
Uliastai is Geography
29 / 30 )  Uliastai Uliastai uliastai
Yuan Shikai is People
30 / 30 )  Yuan Shikai Yuan Shikai yuan_shikai
extract_triplet(Mongolia)
Got GPT's response. String length : 4162
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  [['Russia', 'Russia', 'russia']]
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  [['China', 'China', 'china']]
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  [['Ulaanbaatar', 'Ulaanbaatar', 'ulaanbaatar']]
object_words:  [(None, 'Mongolia', 'mongolia')]
subject_words:  [['Kublai Khan', 'Kublai Khan', 'kublai_khan']]
object_words:  [['China', 'China', 'china'], ['Yuan dynasty', 'Yuan dynasty', 'yuan_dynasty']]
subject_words:  [['Gobi Desert', 'Gobi Desert', 'gobi_desert']]
object_words:  [(None, 'Mongolia', 'mongolia')]
subject_words:  [['Ulaanbaatar', 'Ulaanbaatar', 'ulaanbaatar']]
object_words:  [(None, 'Mongolia', 'mongolia')]
subject_words:  []
object_words:  []
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  [['Soviet Union', 'Soviet Union', 'soviet_union']]
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  []
object_words:  [['Kublai Khan', 'Kublai Khan', 'kublai_khan']]
subject_words:  [['Kublai Khan', 'Kublai Khan', 'kublai_khan']]
object_words:  [['Yuan dynasty', 'Yuan dynasty', 'yuan_dynasty']]
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  []
object_words:  [(None, 'Mongolia', 'mongolia')]
subject_words:  []
object_words:  []
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  []
object_words:  []
['', 'The official language of Mongolia is', 'Mongolian', '']
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
subject_words:  []
object_words:  [(None, 'Mongolia', 'mongolia')]
subject_words:  []
object_words:  [(None, 'Mongolia', 'mongolia')]
subject_words:  []
object_words:  [(None, 'Mongolia', 'mongolia')]
subject_words:  [(None, 'Mongolia', 'mongolia')]
object_words:  []
generate_question(1_7, ['("Genghis Khan", "deified in", "Mongolia")', '("Mongolia", "is bordered by", "China to the south")'], ['Mongolia', 'China'], [('Genghis Khan', 'Mongolia'), ('Mongolia', 'China')], China, [{'name': 'Genghis Khan', 'line': 18}, {'name': 'Mongolia', 'line': 2}]) called
GPT output is:  Q: Which country to the south of the nation where Genghis Khan is deified shares a border with it?
A: China
final_choice(China, options = 5) started
[]
entity_type(China) called
China is Geography
check_matchscore(China, Countries and territories where Chinese is an official language):  0.0
choose_by_wiki_recur(Countries and territories where Chinese is an official language)
   Pages in Countries and territories where Chinese is an official language: ['China', 'Hong Kong', 'Macau', 'Singapore', 'Taiwan']
      Taiwan in ['Taiwan', 'Hong Kong', 'Macau', 'Singapore']
      Hong Kong in ['Taiwan', 'Hong Kong', 'Macau', 'Singapore']
      Macau in ['Taiwan', 'Hong Kong', 'Macau', 'Singapore']
      Singapore in ['Taiwan', 'Hong Kong', 'Macau', 'Singapore']
['Taiwan', 'Hong Kong', 'Macau', 'Singapore']
Ended after 2.5 hierarchy
(2.5, ['Taiwan', 'Macau', 'Hong Kong', 'Singapore'])

extract_info(Singapore) Start.
utils/preprocess.py extract_info(): Checking good links on Singapore
Equator is Geography
1 / 30 )  equator Equator equator
Malay Peninsula is Geography
2 / 30 )  Malay Peninsula Malay Peninsula malay_peninsula
Strait of Malacca is Geography
3 / 30 )  Strait of Malacca Strait of Malacca strait_of_malacca
Riau Islands is Geography
4 / 30 )  Riau Islands Riau Islands riau_islands
Indonesia is Geography
5 / 30 )  Indonesia Indonesia indonesia
South China Sea is Geography
6 / 30 )  South China Sea South China Sea south_china_sea
Straits of Johor is Geography
7 / 30 )  Straits of Johor Straits of Johor straits_of_johor
Johor is Geography
8 / 30 )  State of Johor Johor johor
Malaysia is Geography
9 / 30 )  Malaysia Malaysia malaysia
Singapore Island is Geography
10 / 30 )  main island Singapore Island singapore_island
Stamford Raffles is People
11 / 30 )  Stamford Raffles Stamford Raffles stamford_raffles
Straits Settlements is Geography
12 / 30 )  Straits Settlements Straits Settlements straits_settlements
Federation of Malaya is Geography
13 / 30 )  Malaya Federation of Malaya federation_of_malaya
Lee Kuan Yew is People
14 / 30 )  Lee Kuan Yew Lee Kuan Yew lee_kuan_yew
ASEAN is Geography
15 / 30 )  ASEAN ASEAN asean
World Trade Organization is Geography
16 / 30 )  World Trade Organization World Trade Organization world_trade_organization
Java is Geography
17 / 30 )  Javanese Java java
Vietnam is Geography
18 / 30 )  Vietnamese Vietnam vietnam
Palembang is Geography
19 / 30 )  Palembang Palembang palembang
Malacca is Geography
20 / 30 )  Malacca Malacca malacca
United Kingdom of Great Britain and Ireland is Geography
21 / 30 )  Britain United Kingdom of Great Britain and Ireland united_kingdom_of_great_britain_and_ireland
Myanmar is Geography
22 / 30 )  Burma Myanmar myanmar
Winston Churchill is People
23 / 30 )  Winston Churchill Winston Churchill winston_churchill
Gibraltar is Geography
24 / 30 )  Gibraltar Gibraltar gibraltar
Japan is Geography
25 / 30 )  Japan Japan japan
United Kingdom is Geography
26 / 30 )  Britain United Kingdom united_kingdom
Louis Mountbatten, 1st Earl Mountbatten of Burma is People
27 / 30 )  Louis Mountbatten Louis Mountbatten, 1st Earl Mountbatten of Burma lord_louis_mountbatten
Philippines is Geography
28 / 30 )  Philippines Philippines philippines
London is Geography
29 / 30 )  London London london
Brunei is Geography
30 / 30 )  Brunei Brunei brunei
extract_triplet(Singapore)
Got GPT's response. String length : 713
subject_words:  [(None, 'Singapore', 'singapore')]
object_words:  [['equator', 'Equator', 'equator']]
subject_words:  [(None, 'Singapore', 'singapore')]
object_words:  [['Strait of Malacca', 'Strait of Malacca', 'strait_of_malacca'], ['Malacca', 'Malacca', 'malacca']]
subject_words:  [(None, 'Singapore', 'singapore')]
object_words:  [['South China Sea', 'South China Sea', 'south_china_sea']]
subject_words:  [(None, 'Singapore', 'singapore')]
object_words:  [['main island', 'Singapore Island', 'singapore_island']]
subject_words:  [['Stamford Raffles', 'Stamford Raffles', 'stamford_raffles']]
object_words:  [(None, 'Singapore', 'singapore')]
subject_words:  [(None, 'Singapore', 'singapore')]
object_words:  [['Straits Settlements', 'Straits Settlements', 'straits_settlements']]
subject_words:  [(None, 'Singapore', 'singapore')]
object_words:  [['Britain', 'United Kingdom of Great Britain and Ireland', 'united_kingdom_of_great_britain_and_ireland'], ['Britain', 'United Kingdom', 'united_kingdom']]
subject_words:  [['Lee Kuan Yew', 'Lee Kuan Yew', 'lee_kuan_yew']]
object_words:  [(None, 'Singapore', 'singapore')]
subject_words:  [(None, 'Singapore', 'singapore')]
object_words:  [['ASEAN', 'ASEAN', 'asean']]
subject_words:  [(None, 'Singapore', 'singapore')]
object_words:  [['World Trade Organization', 'World Trade Organization', 'world_trade_organization']]
subject_words:  [(None, 'Singapore', 'singapore')]
object_words:  [['Riau Islands', 'Riau Islands', 'riau_islands']]
subject_words:  [(None, 'Singapore', 'singapore')]
object_words:  [['State of Johor', 'Johor', 'johor'], ['Malaysia', 'Malaysia', 'malaysia']]
extract_info(Hong Kong) Start.
utils/preprocess.py extract_info(): Checking good links on Hong Kong
China is Geography
1 / 30 )  People's Republic of China China china
Qing dynasty is Geography
2 / 30 )  Qing dynasty Qing dynasty qing_dynasty
Hong Kong Island is Geography
3 / 30 )  Hong Kong Island Hong Kong Island hong_kong_island
Kowloon Peninsula is Geography
4 / 30 )  Kowloon Peninsula Kowloon Peninsula kowloon_peninsula
New Territories is Geography
5 / 30 )  New Territories New Territories new_territories
Empire of Japan is Geography
6 / 30 )  Japan Empire of Japan empire_of_japan
Kowloon is Geography
7 / 30 )  Kowloon Kowloon kowloon
Victoria Harbour is Geography
8 / 30 )  Victoria Harbour Victoria Harbour victoria_harbor
Kowloon City is Geography
9 / 30 )  Kowloon City Kowloon City kowloon_city
Yuan dynasty is Geography
10 / 30 )  Yuan dynasty Yuan dynasty yuan_dynasty
Macau is Geography
11 / 30 )  Macau Macau macau
Kangxi Emperor is People
12 / 30 )  Kangxi Emperor Kangxi Emperor kangxi
Guangzhou is Geography
13 / 30 )  Canton Guangzhou guangzhou
Daoguang Emperor is People
14 / 30 )  Daoguang Emperor Daoguang Emperor daoguang_emperor
Lin Zexu is People
15 / 30 )  Lin Zexu Lin Zexu lin_zexu
United Kingdom of Great Britain and Ireland is Geography
16 / 30 )  United Kingdom United Kingdom of Great Britain and Ireland united_kingdom_of_great_britain_and_ireland
Stonecutters Island is Geography
17 / 30 )  Stonecutters Island Stonecutters Island stonecutters_island
University of Hong Kong is Geography
18 / 30 )  University of Hong Kong University of Hong Kong university_of_hong_kong
Kai Tak Airport is Geography
19 / 30 )  Kai Tak Airport Kai Tak Airport kai_tak_airport
Attack on Pearl Harbor is Geography
20 / 30 )  attack on Pearl Harbor Attack on Pearl Harbor attack_on_pearl_harbor
Deng Xiaoping is People
21 / 30 )  Deng Xiaoping Deng Xiaoping deng_xiaoping
World Trade Organization is Geography
22 / 30 )  World Trade Organization World Trade Organization world_trade_organization
International Olympic Committee is Geography
23 / 30 )  International Olympic Committee International Olympic Committee international_olympic_committee
Pearl River Delta is Geography
24 / 30 )  Pearl River estuary Pearl River Delta pearl_river_delta
South China Sea is Geography
25 / 30 )  South China Sea South China Sea south_china_sea
Guangdong is Geography
26 / 30 )  Guangdong Guangdong guangdong
Shenzhen is Geography
27 / 30 )  Shenzhen Shenzhen shenzhen
Vascular plant is Animal
28 / 30 )  vascular plants Vascular plant vascular_plant
Tropic of Cancer is Geography
29 / 30 )  Tropic of Cancer Tropic of Cancer tropic_of_cancer
Hong Kong Wetland Park is Geography
30 / 30 )  Wetland Park Hong Kong Wetland Park hong_kong_wetland_park
extract_triplet(Hong Kong)
Got GPT's response. String length : 1297
subject_words:  [(None, 'Hong Kong', 'hong_kong')]
object_words:  [["People's Republic of China", 'China', 'china']]
subject_words:  [(None, 'Hong Kong', 'hong_kong')]
object_words:  [['Qing dynasty', 'Qing dynasty', 'qing_dynasty']]
subject_words:  [(None, 'Hong Kong', 'hong_kong')]
object_words:  [(None, 'Hong Kong', 'hong_kong'), ['University of Hong Kong', 'University of Hong Kong', 'university_of_hong_kong']]
subject_words:  [(None, 'Hong Kong', 'hong_kong')]
object_words:  []
subject_words:  [(None, 'Hong Kong', 'hong_kong')]
object_words:  [['World Trade Organization', 'World Trade Organization', 'world_trade_organization']]
subject_words:  [(None, 'Hong Kong', 'hong_kong')]
object_words:  [['International Olympic Committee', 'International Olympic Committee', 'international_olympic_committee']]
subject_words:  [(None, 'Hong Kong', 'hong_kong')]
object_words:  [['Pearl River estuary', 'Pearl River Delta', 'pearl_river_delta']]
subject_words:  [(None, 'Hong Kong', 'hong_kong')]
object_words:  [["People's Republic of China", 'China', 'china'], ['South China Sea', 'South China Sea', 'south_china_sea']]
subject_words:  [['Guangdong', 'Guangdong', 'guangdong']]
object_words:  [(None, 'Hong Kong', 'hong_kong')]
subject_words:  [['Shenzhen', 'Shenzhen', 'shenzhen']]
object_words:  [(None, 'Hong Kong', 'hong_kong')]
subject_words:  [(None, 'Hong Kong', 'hong_kong')]
object_words:  [['Tropic of Cancer', 'Tropic of Cancer', 'tropic_of_cancer']]
subject_words:  [(None, 'Hong Kong', 'hong_kong')]
object_words:  [['Wetland Park', 'Hong Kong Wetland Park', 'hong_kong_wetland_park']]
extract_info(Macau) Start.
utils/preprocess.py extract_info(): Checking good links on Macau
China is Geography
1 / 30 )  People's Republic of China China china
Las Vegas is Geography
2 / 30 )  Las Vegas Las Vegas las_vegas
Taipa is Geography
3 / 30 )  Taipa Taipa taipa
Coloane is Geography
4 / 30 )  Coloane Coloane coloane
Panyu, Guangzhou is Geography
5 / 30 )  Panyu County Panyu, Guangzhou panyu
Guangdong is Geography
6 / 30 )  Guangdong Guangdong guangdong
Dongguan is Geography
7 / 30 )  Dongguan Prefecture Dongguan dongguan
Zhongshan is Geography
8 / 30 )  Xiangshan County Zhongshan zhongshan
Hong Kong is Geography
9 / 30 )  Hong Kong Hong Kong hong_kong
Lantau Island is Geography
10 / 30 )  Lantau Island Lantau Island lantau_island
Japan is Geography
11 / 30 )  Japan Japan japan
Quanzhou is Geography
12 / 30 )  Quanzhou Quanzhou quanzhou
Ningbo is Geography
13 / 30 )  Ningbo Ningbo ningbo
Kangxi Emperor is People
14 / 30 )  Kangxi Emperor Kangxi Emperor kangxi
Guangzhou is Geography
15 / 30 )  Canton Guangzhou guangzhou
Empire of Japan is Geography
16 / 30 )  Empire of Japan Empire of Japan empire_of_japan
United Kingdom is Geography
17 / 30 )  United Kingdom United Kingdom united_kingdom
Macau International Airport is Geography
18 / 30 )  Macau International Airport Macau International Airport macau_international_airport
World Trade Organization is Geography
19 / 30 )  World Trade Organization World Trade Organization world_trade_organization
Spain is Geography
20 / 30 )  Spain Spain spain
Cotai is Geography
21 / 30 )  Cotai Cotai cotai
Pearl River is Geography
22 / 30 )  Pearl River Pearl River pearl_river
South China Sea is Geography
23 / 30 )  South China Sea South China Sea south_china_sea
Zhuhai is Geography
24 / 30 )  Zhuhai Zhuhai zhuhai
Tropic of Cancer is Geography
25 / 30 )  Tropic of Cancer Tropic of Cancer tropic_of_cancer
Fujian is Geography
26 / 30 )  Fujian Fujian fujian
Centre for Disease Control and Prevention  is Geography
27 / 30 )  Macau Centre for Disease Control and Prevention Centre for Disease Control and Prevention  centers_for_disease_control
Durban is Geography
28 / 30 )  Durban Durban durban
Edmund Ho is People
29 / 30 )  Edmund Ho Edmund Ho he_houhua
Turmeric is Animal
30 / 30 )  turmeric Turmeric turmeric
extract_triplet(Macau)
Got GPT's response. String length : 2326
subject_words:  [(None, 'Macau', 'macau')]
object_words:  [["People's Republic of China", 'China', 'china']]
subject_words:  [(None, 'Macau', 'macau')]
object_words:  []
subject_words:  [(None, 'Macau', 'macau')]
object_words:  []
subject_words:  [(None, 'Macau', 'macau')]
object_words:  [['Las Vegas', 'Las Vegas', 'las_vegas']]
subject_words:  [(None, 'Macau', 'macau')]
object_words:  []
subject_words:  [(None, 'Macau', 'macau')]
object_words:  []
subject_words:  [(None, 'Macau', 'macau')]
object_words:  []
subject_words:  []
object_words:  []
subject_words:  [(None, 'Macau', 'macau')]
object_words:  [['Panyu County', 'Panyu, Guangzhou', 'panyu']]
subject_words:  [(None, 'Macau', 'macau')]
object_words:  [['Dongguan Prefecture', 'Dongguan', 'dongguan']]
subject_words:  [(None, 'Macau', 'macau')]
object_words:  [['Xiangshan County', 'Zhongshan', 'zhongshan']]
subject_words:  []
object_words:  [(None, 'Macau', 'macau')]
subject_words:  [(None, 'Macau', 'macau')]
object_words:  [['Japan', 'Japan', 'japan']]
subject_words:  [(None, 'Macau', 'macau')]
object_words:  [['Hong Kong', 'Hong Kong', 'hong_kong']]
subject_words:  []
object_words:  [(None, 'Macau', 'macau')]
subject_words:  [['United Kingdom', 'United Kingdom', 'united_kingdom']]
object_words:  [(None, 'Macau', 'macau')]
subject_words:  [(None, 'Macau', 'macau'), ['Macau International Airport', 'Macau International Airport', 'macau_international_airport']]
object_words:  []
subject_words:  [(None, 'Macau', 'macau')]
object_words:  [['World Trade Organization', 'World Trade Organization', 'world_trade_organization']]
subject_words:  [(None, 'Macau', 'macau')]
object_words:  []
subject_words:  [(None, 'Macau', 'macau')]
object_words:  [(None, 'Macau', 'macau')]
subject_words:  [(None, 'Macau', 'macau')]
object_words:  [["People's Republic of China", 'China', 'china'], ['Pearl River', 'Pearl River', 'pearl_river'], ['South China Sea', 'South China Sea', 'south_china_sea']]
subject_words:  [(None, 'Macau', 'macau')]
object_words:  [['Coloane', 'Coloane', 'coloane']]
